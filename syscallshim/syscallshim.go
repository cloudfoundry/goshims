// Code generated by counterfeiter. DO NOT EDIT.
// with command: counterfeiter -p -o /Users/hjortj1/go/src/code.cloudfoundry.org/goshims/syscallshim syscall
package syscallshim

import "syscall"

type SyscallShim struct{}

func (sh *SyscallShim) ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {
	return syscall.ParseDirent(buf, max, names)
}

func (sh *SyscallShim) Getenv(key string) (value string, found bool) {
	return syscall.Getenv(key)
}

func (sh *SyscallShim) Setenv(key string, value string) error {
	return syscall.Setenv(key, value)
}

func (sh *SyscallShim) Clearenv() {
	syscall.Clearenv()
}

func (sh *SyscallShim) Unsetenv(key string) error {
	return syscall.Unsetenv(key)
}

func (sh *SyscallShim) Environ() []string {
	return syscall.Environ()
}

func (sh *SyscallShim) SlicePtrFromStrings(ss []string) ([]*byte, error) {
	return syscall.SlicePtrFromStrings(ss)
}

func (sh *SyscallShim) ForkExec(argv0 string, argv []string, attr *syscall.ProcAttr) (pid int, err error) {
	return syscall.ForkExec(argv0, argv, attr)
}

func (sh *SyscallShim) StartProcess(argv0 string, argv []string, attr *syscall.ProcAttr) (pid int, handle uintptr, err error) {
	return syscall.StartProcess(argv0, argv, attr)
}

func (sh *SyscallShim) Exec(argv0 string, argv []string, envv []string) (err error) {
	return syscall.Exec(argv0, argv, envv)
}

func (sh *SyscallShim) CloseOnExec(fd int) {
	syscall.CloseOnExec(fd)
}

func (sh *SyscallShim) SetNonblock(fd int, nonblocking bool) (err error) {
	return syscall.SetNonblock(fd, nonblocking)
}

func (sh *SyscallShim) Close(fd int) error {
	return syscall.Close(fd)
}

func (sh *SyscallShim) Dup(fd int) (int, error) {
	return syscall.Dup(fd)
}

func (sh *SyscallShim) Dup2(fd int, newfd int) error {
	return syscall.Dup2(fd, newfd)
}

func (sh *SyscallShim) Fstat(fd int, st *syscall.Stat_t) error {
	return syscall.Fstat(fd, st)
}

func (sh *SyscallShim) Read(fd int, b []byte) (int, error) {
	return syscall.Read(fd, b)
}

func (sh *SyscallShim) Write(fd int, b []byte) (int, error) {
	return syscall.Write(fd, b)
}

func (sh *SyscallShim) Pread(fd int, b []byte, offset int64) (int, error) {
	return syscall.Pread(fd, b, offset)
}

func (sh *SyscallShim) Pwrite(fd int, b []byte, offset int64) (int, error) {
	return syscall.Pwrite(fd, b, offset)
}

func (sh *SyscallShim) Seek(fd int, offset int64, whence int) (int64, error) {
	return syscall.Seek(fd, offset, whence)
}

func (sh *SyscallShim) Pipe(fd []int) error {
	return syscall.Pipe(fd)
}

func (sh *SyscallShim) FcntlFlock(fd uintptr, cmd int, lk *syscall.Flock_t) error {
	return syscall.FcntlFlock(fd, cmd, lk)
}

func (sh *SyscallShim) ReadDirent(fd int, buf []byte) (int, error) {
	return syscall.ReadDirent(fd, buf)
}

func (sh *SyscallShim) Open(path string, openmode int, perm uint32) (fd int, err error) {
	return syscall.Open(path, openmode, perm)
}

func (sh *SyscallShim) Mkdir(path string, perm uint32) error {
	return syscall.Mkdir(path, perm)
}

func (sh *SyscallShim) Stat(path string, st *syscall.Stat_t) error {
	return syscall.Stat(path, st)
}

func (sh *SyscallShim) Lstat(path string, st *syscall.Stat_t) error {
	return syscall.Lstat(path, st)
}

func (sh *SyscallShim) Unlink(path string) error {
	return syscall.Unlink(path)
}

func (sh *SyscallShim) Rmdir(path string) error {
	return syscall.Rmdir(path)
}

func (sh *SyscallShim) Chmod(path string, mode uint32) error {
	return syscall.Chmod(path, mode)
}

func (sh *SyscallShim) Fchmod(fd int, mode uint32) error {
	return syscall.Fchmod(fd, mode)
}

func (sh *SyscallShim) Chown(path string, uid int, gid int) error {
	return syscall.Chown(path, uid, gid)
}

func (sh *SyscallShim) Fchown(fd int, uid int, gid int) error {
	return syscall.Fchown(fd, uid, gid)
}

func (sh *SyscallShim) Lchown(path string, uid int, gid int) error {
	return syscall.Lchown(path, uid, gid)
}

func (sh *SyscallShim) UtimesNano(path string, ts []syscall.Timespec) error {
	return syscall.UtimesNano(path, ts)
}

func (sh *SyscallShim) Link(path string, link string) error {
	return syscall.Link(path, link)
}

func (sh *SyscallShim) Rename(from string, to string) error {
	return syscall.Rename(from, to)
}

func (sh *SyscallShim) Truncate(path string, length int64) error {
	return syscall.Truncate(path, length)
}

func (sh *SyscallShim) Ftruncate(fd int, length int64) error {
	return syscall.Ftruncate(fd, length)
}

func (sh *SyscallShim) Chdir(path string) error {
	return syscall.Chdir(path)
}

func (sh *SyscallShim) Fchdir(fd int) error {
	return syscall.Fchdir(fd)
}

func (sh *SyscallShim) Readlink(path string, buf []byte) (n int, err error) {
	return syscall.Readlink(path, buf)
}

func (sh *SyscallShim) Symlink(path string, link string) error {
	return syscall.Symlink(path, link)
}

func (sh *SyscallShim) Fsync(fd int) error {
	return syscall.Fsync(fd)
}

func (sh *SyscallShim) Socket(proto int, sotype int, unused int) (fd int, err error) {
	return syscall.Socket(proto, sotype, unused)
}

func (sh *SyscallShim) Bind(fd int, sa syscall.Sockaddr) error {
	return syscall.Bind(fd, sa)
}

func (sh *SyscallShim) Listen(fd int, backlog int) error {
	return syscall.Listen(fd, backlog)
}

func (sh *SyscallShim) Accept(fd int) (newfd int, sa syscall.Sockaddr, err error) {
	return syscall.Accept(fd)
}

func (sh *SyscallShim) Getsockname(fd int) (sa syscall.Sockaddr, err error) {
	return syscall.Getsockname(fd)
}

func (sh *SyscallShim) Getpeername(fd int) (sa syscall.Sockaddr, err error) {
	return syscall.Getpeername(fd)
}

func (sh *SyscallShim) Connect(fd int, sa syscall.Sockaddr) error {
	return syscall.Connect(fd, sa)
}

func (sh *SyscallShim) Recvfrom(fd int, p []byte, flags int) (n int, from syscall.Sockaddr, err error) {
	return syscall.Recvfrom(fd, p, flags)
}

func (sh *SyscallShim) Sendto(fd int, p []byte, flags int, to syscall.Sockaddr) error {
	return syscall.Sendto(fd, p, flags, to)
}

func (sh *SyscallShim) Recvmsg(fd int, p []byte, oob []byte, flags int) (n, oobn, recvflags int, from syscall.Sockaddr, err error) {
	return syscall.Recvmsg(fd, p, oob, flags)
}

func (sh *SyscallShim) Sendmsg(fd int, p []byte, oob []byte, to syscall.Sockaddr, flags int) error {
	return syscall.Sendmsg(fd, p, oob, to, flags)
}

func (sh *SyscallShim) SendmsgN(fd int, p []byte, oob []byte, to syscall.Sockaddr, flags int) (n int, err error) {
	return syscall.SendmsgN(fd, p, oob, to, flags)
}

func (sh *SyscallShim) GetsockoptInt(fd int, level int, opt int) (value int, err error) {
	return syscall.GetsockoptInt(fd, level, opt)
}

func (sh *SyscallShim) SetsockoptInt(fd int, level int, opt int, value int) error {
	return syscall.SetsockoptInt(fd, level, opt, value)
}

func (sh *SyscallShim) SetsockoptByte(fd int, level int, opt int, value byte) error {
	return syscall.SetsockoptByte(fd, level, opt, value)
}

func (sh *SyscallShim) SetsockoptLinger(fd int, level int, opt int, l *syscall.Linger) error {
	return syscall.SetsockoptLinger(fd, level, opt, l)
}

func (sh *SyscallShim) Shutdown(fd int, how int) error {
	return syscall.Shutdown(fd, how)
}

func (sh *SyscallShim) SetsockoptICMPv6Filter(fd int, level int, opt int, filter *syscall.ICMPv6Filter) error {
	return syscall.SetsockoptICMPv6Filter(fd, level, opt, filter)
}

func (sh *SyscallShim) SetsockoptIPMreq(fd int, level int, opt int, mreq *syscall.IPMreq) error {
	return syscall.SetsockoptIPMreq(fd, level, opt, mreq)
}

func (sh *SyscallShim) SetsockoptIPv6Mreq(fd int, level int, opt int, mreq *syscall.IPv6Mreq) error {
	return syscall.SetsockoptIPv6Mreq(fd, level, opt, mreq)
}

func (sh *SyscallShim) SetsockoptInet4Addr(fd int, level int, opt int, value [4]byte) error {
	return syscall.SetsockoptInet4Addr(fd, level, opt, value)
}

func (sh *SyscallShim) SetsockoptString(fd int, level int, opt int, s string) error {
	return syscall.SetsockoptString(fd, level, opt, s)
}

func (sh *SyscallShim) SetsockoptTimeval(fd int, level int, opt int, tv *syscall.Timeval) error {
	return syscall.SetsockoptTimeval(fd, level, opt, tv)
}

func (sh *SyscallShim) Socketpair(domain int, typ int, proto int) (fd [2]int, err error) {
	return syscall.Socketpair(domain, typ, proto)
}

func (sh *SyscallShim) Getwd() (wd string, err error) {
	return syscall.Getwd()
}

func (sh *SyscallShim) CmsgLen(datalen int) int {
	return syscall.CmsgLen(datalen)
}

func (sh *SyscallShim) CmsgSpace(datalen int) int {
	return syscall.CmsgSpace(datalen)
}

func (sh *SyscallShim) ParseSocketControlMessage(b []byte) ([]syscall.SocketControlMessage, error) {
	return syscall.ParseSocketControlMessage(b)
}

func (sh *SyscallShim) UnixRights(fds ...int) []byte {
	return syscall.UnixRights(fds...)
}

func (sh *SyscallShim) ParseUnixRights(m *syscall.SocketControlMessage) ([]int, error) {
	return syscall.ParseUnixRights(m)
}

func (sh *SyscallShim) ByteSliceFromString(s string) ([]byte, error) {
	return syscall.ByteSliceFromString(s)
}

func (sh *SyscallShim) BytePtrFromString(s string) (*byte, error) {
	return syscall.BytePtrFromString(s)
}

func (sh *SyscallShim) Getpagesize() int {
	return syscall.Getpagesize()
}

func (sh *SyscallShim) Getgroups() (gids []int, err error) {
	return syscall.Getgroups()
}

func (sh *SyscallShim) Setgroups(gids []int) (err error) {
	return syscall.Setgroups(gids)
}

func (sh *SyscallShim) Wait4(pid int, wstatus *syscall.WaitStatus, options int, rusage *syscall.Rusage) (wpid int, err error) {
	return syscall.Wait4(pid, wstatus, options, rusage)
}

func (sh *SyscallShim) GetsockoptInet4Addr(fd int, level int, opt int) (value [4]byte, err error) {
	return syscall.GetsockoptInet4Addr(fd, level, opt)
}

func (sh *SyscallShim) GetsockoptIPMreq(fd int, level int, opt int) (*syscall.IPMreq, error) {
	return syscall.GetsockoptIPMreq(fd, level, opt)
}

func (sh *SyscallShim) GetsockoptIPv6Mreq(fd int, level int, opt int) (*syscall.IPv6Mreq, error) {
	return syscall.GetsockoptIPv6Mreq(fd, level, opt)
}

func (sh *SyscallShim) GetsockoptIPv6MTUInfo(fd int, level int, opt int) (*syscall.IPv6MTUInfo, error) {
	return syscall.GetsockoptIPv6MTUInfo(fd, level, opt)
}

func (sh *SyscallShim) GetsockoptICMPv6Filter(fd int, level int, opt int) (*syscall.ICMPv6Filter, error) {
	return syscall.GetsockoptICMPv6Filter(fd, level, opt)
}

func (sh *SyscallShim) Utimes(path string, tv []syscall.Timeval) (err error) {
	return syscall.Utimes(path, tv)
}

func (sh *SyscallShim) Futimes(fd int, tv []syscall.Timeval) (err error) {
	return syscall.Futimes(fd, tv)
}

func (sh *SyscallShim) Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error) {
	return syscall.Mmap(fd, offset, length, prot, flags)
}

func (sh *SyscallShim) Munmap(b []byte) (err error) {
	return syscall.Munmap(b)
}

func (sh *SyscallShim) PtraceAttach(pid int) (err error) {
	return syscall.PtraceAttach(pid)
}

func (sh *SyscallShim) PtraceDetach(pid int) (err error) {
	return syscall.PtraceDetach(pid)
}

func (sh *SyscallShim) Kill(pid int, signum syscall.Signal) (err error) {
	return syscall.Kill(pid, signum)
}

func (sh *SyscallShim) Gettimeofday(tv *syscall.Timeval) error {
	return syscall.Gettimeofday(tv)
}

func (sh *SyscallShim) Access(path string, mode uint32) (err error) {
	return syscall.Access(path, mode)
}

func (sh *SyscallShim) Mknod(path string, mode uint32, dev int) (err error) {
	return syscall.Mknod(path, mode, dev)
}

func (sh *SyscallShim) Mkfifo(path string, mode uint32) (err error) {
	return syscall.Mkfifo(path, mode)
}

func (sh *SyscallShim) Getpgrp() (pid int) {
	return syscall.Getpgrp()
}

func (sh *SyscallShim) Setuid(uid int) (err error) {
	return syscall.Setuid(uid)
}

func (sh *SyscallShim) Setgid(gid int) (err error) {
	return syscall.Setgid(gid)
}

func (sh *SyscallShim) Getrlimit(resource int, rlim *syscall.Rlimit) (err error) {
	return syscall.Getrlimit(resource, rlim)
}

func (sh *SyscallShim) Setrlimit(resource int, rlim *syscall.Rlimit) (err error) {
	return syscall.Setrlimit(resource, rlim)
}

func (sh *SyscallShim) Fstatfs(fd int, buf *syscall.Statfs_t) (err error) {
	return syscall.Fstatfs(fd, buf)
}

func (sh *SyscallShim) Statfs(path string, buf *syscall.Statfs_t) (err error) {
	return syscall.Statfs(path, buf)
}

func (sh *SyscallShim) RawSyscall(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr) (r1, r2 uintptr, err syscall.Errno) {
	return syscall.RawSyscall(trap, a1, a2, a3)
}

func (sh *SyscallShim) RawSyscall6(trap uintptr, a1 uintptr, a2 uintptr, a3 uintptr, a4 uintptr, a5 uintptr, a6 uintptr) (r1, r2 uintptr, err syscall.Errno) {
	return syscall.RawSyscall6(trap, a1, a2, a3, a4, a5, a6)
}

func (sh *SyscallShim) Getegid() int {
	return syscall.Getegid()
}

func (sh *SyscallShim) Geteuid() int {
	return syscall.Geteuid()
}

func (sh *SyscallShim) Getgid() int {
	return syscall.Getgid()
}

func (sh *SyscallShim) Getppid() int {
	return syscall.Getppid()
}

func (sh *SyscallShim) Getpid() int {
	return syscall.Getpid()
}

func (sh *SyscallShim) Getuid() int {
	return syscall.Getuid()
}

func (sh *SyscallShim) Sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {
	return syscall.Sendfile(outfd, infd, offset, count)
}

func (sh *SyscallShim) Exit(code int) {
	syscall.Exit(code)
}

func (sh *SyscallShim) NsecToTimeval(nsec int64) (tv syscall.Timeval) {
	return syscall.NsecToTimeval(nsec)
}

func (sh *SyscallShim) TimespecToNsec(ts syscall.Timespec) int64 {
	return syscall.TimespecToNsec(ts)
}

func (sh *SyscallShim) NsecToTimespec(nsec int64) (ts syscall.Timespec) {
	return syscall.NsecToTimespec(nsec)
}

func (sh *SyscallShim) TimevalToNsec(tv syscall.Timeval) int64 {
	return syscall.TimevalToNsec(tv)
}

func (sh *SyscallShim) Chroot(path string) (err error) {
	return syscall.Chroot(path)
}

func (sh *SyscallShim) Flock(fd int, how int) (err error) {
	return syscall.Flock(fd, how)
}

func (sh *SyscallShim) Getpgid(pid int) (pgid int, err error) {
	return syscall.Getpgid(pid)
}

func (sh *SyscallShim) Getpriority(which int, who int) (prio int, err error) {
	return syscall.Getpriority(which, who)
}

func (sh *SyscallShim) Getrusage(who int, rusage *syscall.Rusage) (err error) {
	return syscall.Getrusage(who, rusage)
}

func (sh *SyscallShim) Mlock(b []byte) (err error) {
	return syscall.Mlock(b)
}

func (sh *SyscallShim) Mlockall(flags int) (err error) {
	return syscall.Mlockall(flags)
}

func (sh *SyscallShim) Mprotect(b []byte, prot int) (err error) {
	return syscall.Mprotect(b, prot)
}

func (sh *SyscallShim) Munlock(b []byte) (err error) {
	return syscall.Munlock(b)
}

func (sh *SyscallShim) Munlockall() (err error) {
	return syscall.Munlockall()
}

func (sh *SyscallShim) Setpgid(pid int, pgid int) (err error) {
	return syscall.Setpgid(pid, pgid)
}

func (sh *SyscallShim) Setpriority(which int, who int, prio int) (err error) {
	return syscall.Setpriority(which, who, prio)
}

func (sh *SyscallShim) Setregid(rgid int, egid int) (err error) {
	return syscall.Setregid(rgid, egid)
}

func (sh *SyscallShim) Setreuid(ruid int, euid int) (err error) {
	return syscall.Setreuid(ruid, euid)
}

func (sh *SyscallShim) Setsid() (pid int, err error) {
	return syscall.Setsid()
}

func (sh *SyscallShim) Settimeofday(tp *syscall.Timeval) (err error) {
	return syscall.Settimeofday(tp)
}

func (sh *SyscallShim) Umask(newmask int) (oldmask int) {
	return syscall.Umask(newmask)
}
